#!/bin/sh

LUA_SCRIPT=/tmp/CSMv2-upgrade.lua

cat > $LUA_SCRIPT << EOF
#!/usr/bin/lua

require "luci.model.uci"
require "luci.fs"
require "luci.sys"
require "csm"

local uci = luci.model.uci.cursor()

csm.init()
uci:foreach(
  "applications",
  "application",
  function(app)
    if not app.version then
      if app.localapp == "1" then
	print("local app: " .. app[".name"])
	local s = csm.new_service()
	s.version = "2.0"
	s.name = app.name
	s.description = app.description
	s.ttl = tonumber(app.ttl)
	s.lifetime = tonumber(app.lifetime)
	s.uri = app.uri
	s.icon = app.icon
	s.tag = app.type
	if s:commit() then
	  if not uci:delete("applications", app[".name"]) then
	    print("Failed to delete app: "..app[".name"])
	  end
	else
	  print("Failed to convert app: "..app[".name"])
	end
	s:free()
      else
	if app.fingerprint then
	  uci:set("applications",app[".name"],"key",app.fingerprint)
	  uci:delete("applications",app[".name"],"fingerprint")
	end
	if app.type then
	  uci:set_list("applications",app[".name"],"tag",app.type)
	  uci:delete("applications",app[".name"],"type")
	end
      end
    end
  end
)
uci:save("applications")
uci:commit("applications")
csm.shutdown()

luci.sys.exec("/etc/init.d/commotion-service-manager restart")

local avahi_services = luci.fs.dir("/etc/avahi/services")
if avahi_services then
  for _,f in pairs() do
    if f and f ~= "." and f ~= ".." then
      luci.fs.unlink("/etc/avahi/services/"..f)
    end
  end
  luci.fs.rmdir("/etc/avahi/services")
end

luci.sys.exec("sed -i -e \'/\\\/etc\\\/avahi\\\/services\\\//d\' /etc/sysupgrade.conf")

local old_dnssd, new_dnssd
uci:foreach(
  "olsrd",
  "LoadPlugin",
  function(plugin)
    if plugin.library == "olsrd_dnssd.so.0.1.2" then
      old_dnssd = plugin[".name"]
      uci:set("olsrd",plugin[".name"],"library","olsrd_dnssd.so.0.1.3")
      uci:delete("olsrd",plugin[".name"],"ServiceFileDir")
      uci:set("olsrd",plugin[".name"],"CSMSocket","/var/run/commotion-service-manager.sock")
    elseif plugin.library == "olsrd_dnssd.so.0.1.3" then
      new_dnssd = plugin[".name"]
    end
  end
)
if old_dnssd and new_dnssd then
  uci:delete("olsrd",new_dnssd)
end
uci:save("olsrd")
uci:commit("olsrd")

luci.sys.exec("/etc/init.d/olsrd restart")
EOF

chmod +x $LUA_SCRIPT
$LUA_SCRIPT
rm $LUA_SCRIPT